pub struct CPU {
    pub ram: Vec<u8>,
    pub stack: Vec<u16>,
    pub pc: u16,
    pub ir: u16,
    pub v0: u8,
    pub v1: u8,
    pub v2: u8,
    pub v3: u8,
    pub v4: u8,
    pub v5: u8,
    pub v6: u8,
    pub v7: u8,
    pub v8: u8,
    pub v9: u8,
    pub va: u8,
    pub vb: u8,
    pub vc: u8,
    pub vd: u8,
    pub ve: u8,
    pub vf: u8
}

impl CPU {
    pub fn init() -> CPU {
        let ret = CPU {
            ram: vec![0x00; 4096],
            stack: vec![0x0000; 16],
            pc: 0x0000,
            ir: 0x0000,
            v0: 0x00,
            v1: 0x00,
            v2: 0x00,
            v3: 0x00,
            v4: 0x00,
            v5: 0x00,
            v6: 0x00,
            v7: 0x00,
            v8: 0x00,
            v9: 0x00,
            va: 0x00,
            vb: 0x00,
            vc: 0x00,
            vd: 0x00,
            ve: 0x00,
            vf: 0x00

        };

        ret
    }

    pub fn load_font(&mut self) {
        let font = [
            0xF0, 0x90, 0x90, 0x90, 0xF0, // 0
            0x20, 0x60, 0x20, 0x20, 0x70, // 1
            0xF0, 0x10, 0xF0, 0x80, 0xF0, // 2
            0xF0, 0x10, 0xF0, 0x10, 0xF0, // 3
            0x90, 0x90, 0xF0, 0x10, 0x10, // 4
            0xF0, 0x80, 0xF0, 0x10, 0xF0, // 5
            0xF0, 0x80, 0xF0, 0x90, 0xF0, // 6
            0xF0, 0x10, 0x20, 0x40, 0x40, // 7
            0xF0, 0x90, 0xF0, 0x90, 0xF0, // 8
            0xF0, 0x90, 0xF0, 0x10, 0xF0, // 9
            0xF0, 0x90, 0xF0, 0x90, 0x90, // A
            0xE0, 0x90, 0xE0, 0x90, 0xE0, // B
            0xF0, 0x80, 0x80, 0x80, 0xF0, // C
            0xE0, 0x90, 0x90, 0x90, 0xE0, // D
            0xF0, 0x80, 0xF0, 0x80, 0xF0, // E
            0xF0, 0x80, 0xF0, 0x80, 0x80  // F
        ];

        self.ram[0x050..0x0A0].copy_from_slice(&font);
    }
}